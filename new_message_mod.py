# generated by json2python-models v0.2.7 at Wed Nov 30 14:31:49 2022
# command: /home/latu/miniconda3/bin/json2models -m Telega result_yul.json -f pydantic --disable-unicode-conversion -o car.py

from pydantic import BaseModel, Field
from typing import List, Literal, Optional, Union, Annotated
from enum import Enum, unique
from pprint import pprint


@unique
class Gender(Enum):
    MALE = "male"
    FEMALE = "female"
    UNKNOWN = "unknown"


class TelegaUser(BaseModel):
    name: Optional[str]
    type_: Literal["personal_chat",
                   "saved_messages"] = Field(..., alias="type")
    id_: int = Field(..., alias="id")
    messages: List['Message']
    gender: Optional[Gender]
    preview: Optional[List['Message']]
    total_messages: Optional[int]
    need_export: Optional[bool]


class Message(BaseModel):
    id_: int = Field(..., alias="id")
    type_: Literal["message", "service"] = Field(..., alias="type")
    date_: str = Field(..., alias="date")
    date_unixtime: int
    text: Union[List[Union['Text', str]], str]
    text_entities: List['Text']
    edited: Optional[str] = None
    edited_unixtime: Optional[int] = None
    from_: Optional[str] = Field(None, alias="from")
    from_id: Optional[str] = None
    file: Optional[str] = None
    mime_type: Optional[str] = None
    reply_to_message_id: Optional[int] = None
    photo: Optional[str] = None
    width: Optional[int] = None
    height: Optional[int] = None
    thumbnail: Optional[str] = None
    media_type: Optional[Literal["animation", "audio_file", "sticker",
                                 "video_file", "video_message", "voice_message"]] = None
    sticker_emoji: Optional[str] = None
    forwarded_from: Optional[str] = None
    duration_seconds: Optional[int] = None
    via_bot: Optional[str] = None
    performer: Optional[str] = None
    title: Optional[str] = None
    actor: Optional[str] = None
    actor_id: Optional[str] = None
    action: Optional[Literal["score_in_game", "proximity_reached", "edit_chat_theme",
                             "phone_call", "pin_message", "clear_history", "joined_telegram"]] = None
    message_id: Optional[int] = None
    discard_reason: Optional[Literal["busy",
                                     "disconnect", "hangup", "missed"]] = None
    poll: Optional['Poll'] = None
    location_information: Optional['LocationInformation'] = None
    emoticon: Optional[str] = None
    self_destruct_period_seconds: Optional[int] = None


class Poll(BaseModel):
    question: str
    closed: bool
    total_voters: int
    answers: List['Answer']


class Answer(BaseModel):
    text: str
    voters: int
    chosen: bool


class LocationInformation(BaseModel):
    latitude: float
    longitude: float


class Text(BaseModel):
    type_: str = Field(..., alias="type")
    text: str
    document_id: Optional[str] = None
    language: Optional[Literal[""]] = None
    href: Optional[str] = None


class TelegaChats(BaseModel):
    list: List['TelegaUser']


class TelegramFile(BaseModel):
    chats: TelegaChats


TelegaUser.update_forward_refs()
Message.update_forward_refs()
Poll.update_forward_refs()

if __name__ == '__main__':
    user_list = [
        {
            "type": "saved_messages",
            "id": 254968821,
            "messages": [
                {
                    "id": 1,
                    "type": "message",
                    "date": "2016-11-01T20:06:21",
                    "date_unixtime": "1478019981",
                    "from": "Mr.Dingo",
                    "from_id": "user254968821",
                    "text": "Vgh",
                    "text_entities": [
                        {
                            "type": "plain",
                            "text": "Vgh"
                        }
                    ]
                }
            ]
        }
    ]

# for user in user_list:
#     data = Telega.parse_obj(user)
#     pprint(data)
# data = Telega.parse_obj(user_list)
# data = TelegramFile.parse_file('result.json')
